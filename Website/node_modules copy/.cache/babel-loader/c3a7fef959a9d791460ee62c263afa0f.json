{"ast":null,"code":"var _jsxFileName = \"/home/sheridan95/phase-3/final-react-app/src/components/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport TodoCard from \"./TodoCard\";\nimport TodoList from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = () => {\n  _s();\n\n  var _user$todos;\n\n  const [newUser, setNewUser] = useState({\n    username: \"\",\n    email: \"\"\n  });\n  const [user, setUser] = useState(null);\n\n  const handleSubmitNewUser = e => {\n    e.preventDefault(console.log(\"create new user\"));\n    fetch(`http://127.0.0.1:9393/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    }).then(resp => resp.json()).then(newUser => setNewUser(newUser));\n  };\n\n  console.log(newUser);\n\n  const handleSubmitExisting = e => {\n    e.preventDefault(console.log(\"get todo for existing user\"));\n    fetch(`http://127.0.0.1:9393/users/by_name/${user}`).then(resp => resp.json()).then(user => setUser(user));\n  };\n\n  const handleExistingUserChange = e => {\n    setUser(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Below you can either find todo lists for an existing username,\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"or you can create a new username to begin making a new todo list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"NewUserSubmit\",\n      onSubmit: handleSubmitNewUser,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Create New Username: \\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newUser.ua,\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 71\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email: \\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newUser.email,\n        name: \"user_id\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 76\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create New Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"ExistingUserSearch\",\n      onSubmit: handleSubmitExisting,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username: \\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleExistingUserChange,\n        name: \"username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Find Todo lists for this user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0\", user ? (_user$todos = user.todos) === null || _user$todos === void 0 ? void 0 : _user$todos.map(todo => /*#__PURE__*/_jsxDEV(TodoCard, {\n      todo: todo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 39\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProfile, \"rrMkw1LbnaL4LBtX3meG654np+4=\");\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/home/sheridan95/phase-3/final-react-app/src/components/UserProfile.js"],"names":["useState","TodoCard","TodoList","UserProfile","newUser","setNewUser","username","email","user","setUser","handleSubmitNewUser","e","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","resp","json","handleSubmitExisting","handleExistingUserChange","target","value","ua","todos","map","todo"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\nimport TodoCard from \"./TodoCard\";\nimport TodoList from \"./TodoList\";\n\nconst UserProfile = () => {\n  const [newUser, setNewUser] = useState({username:\"\", email: \"\"});\n  const [user, setUser] = useState(null);\n\n  const handleSubmitNewUser = (e) => {\n    e.preventDefault(console.log(\"create new user\"))\n\n    fetch(`http://127.0.0.1:9393/users`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body:JSON.stringify(newUser)\n    })\n      .then(resp => resp.json())\n      .then(newUser => setNewUser(newUser))\n  }\n  console.log(newUser)\n\n  const handleSubmitExisting = (e) => {\n    e.preventDefault(console.log(\"get todo for existing user\"))\n  \n    fetch(`http://127.0.0.1:9393/users/by_name/${user}`)\n      .then(resp => resp.json())\n      .then(user => setUser(user))\n  }\n\n  const handleExistingUserChange = (e) => {\n    setUser(e.target.value)\n  }\n\n  return (\n\n    <div>\n\n      <h4>User Profile</h4>\n      <p>Below you can either find todo lists for an existing username,</p>\n      <p>or you can create a new username to begin making a new todo list</p>\n\n      <form id=\"NewUserSubmit\" onSubmit={handleSubmitNewUser}>\n        <label htmlFor=\"username\">Create New Username: &nbsp;</label>\n        <input type=\"text\" value={newUser.ua} name=\"email\" required /><br />\n        <label htmlFor=\"email\">Email: &nbsp;</label>\n        <input type=\"text\" value={newUser.email} name=\"user_id\" required /><br />\n        <input type=\"submit\" value=\"Create New Username\" />\n      </form>\n\n      &nbsp;\n      &nbsp;\n      &nbsp;\n      &nbsp;\n\n      <form id=\"ExistingUserSearch\" onSubmit={handleSubmitExisting}>\n        <label htmlFor=\"username\">Username: &nbsp;</label>\n        <input type=\"text\" onChange={handleExistingUserChange} name=\"username\" required /><br />\n        <input type=\"submit\" value=\"Find Todo lists for this user\" />\n      </form>\n\n      &nbsp;\n      &nbsp;\n      &nbsp;\n      &nbsp;\n      &nbsp;\n      {user ? user.todos?.map(todo => <TodoCard todo={todo}/>) : null}\n    </div>\n  )\n}\n\nexport default UserProfile"]},"metadata":{},"sourceType":"module"}