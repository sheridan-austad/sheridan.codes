{"ast":null,"code":"var _jsxFileName = \"/home/sheridan95/phase-3/final-react-app/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = () => {\n  _s();\n\n  const [todo, setTodo] = useState({\n    name: \"\",\n    task: \"\",\n    completed: false\n  });\n  const history = useHistory();\n\n  const handleChange = e => {\n    setTodo({ ...todo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if ([todo.name, todo.task, todo.completed].some(val => val.trim() === \"\")) {\n      alert(\"You must fill in all the information please!\");\n    }\n\n    const newTodo = {\n      name: todo.name,\n      task: todo.task,\n      completed: todo.completed\n    };\n    fetch(\"http://http://127.0.0.1:9292/todos\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTodo)\n    }).then(() => history.push(\"/todos\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create a new Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: todos.name,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 101\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"task\",\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        name: \"task\",\n        value: todos.task,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 101\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"checkbox\",\n        checked: \"checked\",\n        name: \"completed\",\n        value: todos.completed,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 133\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TodoForm, \"kG6McMBruMOUSSrRaQVMc1c8F10=\", false, function () {\n  return [useHistory];\n});\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/sheridan95/phase-3/final-react-app/src/components/TodoForm.js"],"names":["useState","useHistory","TodoForm","todo","setTodo","name","task","completed","history","handleChange","e","target","value","handleSubmit","preventDefault","some","val","trim","alert","newTodo","fetch","method","headers","body","JSON","stringify","then","push","todos"],"mappings":"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","sourcesContent":["import {useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\n\n\nconst TodoForm = () => {\n    const [todo, setTodo] = useState({\n        name: \"\",\n        task: \"\",\n        completed: false\n    });\n\n    const history = useHistory()\n    \n    const handleChange = (e) => {\n        setTodo({\n            ...todo,\n            [e.target.name]: e.target.value\n        })\n    }\n    const handleSubmit = e => {\n        e.preventDefault()\n        if ([todo.name, todo.task, todo.completed].some(val => val.trim() === \"\")) {\n            alert(\"You must fill in all the information please!\")\n        }\n\n        const newTodo = {\n            name: todo.name,\n            task: todo.task,\n            completed: todo.completed            \n        }\n\n        fetch(\"http://http://127.0.0.1:9292/todos\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(newTodo)\n        })\n        .then(() => history.push(\"/todos\"))\n        \n    }\n    return (\n        <>\n            <h3>Create a new Todo List</h3>\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"name\">Name</label>\n                <input onChange={handleChange} type=\"text\" name=\"name\" value={todos.name} required/><br />\n               \n                <label htmlFor=\"task\">Task</label>\n                <input onChange={handleChange} type=\"text\" name=\"task\" value={todos.task} required/><br />\n               \n                <label htmlFor=\"completed\">Completed</label>\n                <input onChange={handleChange} type=\"checkbox\" checked=\"checked\" name=\"completed\" value={todos.completed} required/><br />\n                <input type=\"submit\" value=\"Create Todo List\" />\n            </form>\n        </>\n    )\n}\n\nexport default TodoForm"]},"metadata":{},"sourceType":"module"}