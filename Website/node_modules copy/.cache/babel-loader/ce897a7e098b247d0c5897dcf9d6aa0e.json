{"ast":null,"code":"var _jsxFileName = \"/home/sheridan95/phase-3/final-react-app/src/components/UserProfile.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // import TodoContainer from \"../containers/TodoContainer\";\n\nimport TodoList from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = () => {\n  _s();\n\n  const [newUser, setNewUser] = useState(null);\n  const [user, setUser] = useState(null); //   useEffect = (() => {\n  //    const render = render ? <TodoList/> : (null)\n  //     console.log(\"working on it\");\n  // }, []);\n  // }\n  // above should be a ternary expression\n  // to say if the user exists show their todo lists\n  // otherwise prompt them to create a new username\n\n  const handleSubmitNewUser = e => {\n    e.preventDefault(console.log(\"handling new submit\"));\n    fetch(`http://127.0.0.1:9393/users`).then(resp => resp.json()).then(newUser => setNewUser(newUser));\n  };\n\n  console.log(newUser);\n\n  const handleSubmitExisting = e => {\n    e.preventDefault(console.log(\"handling this submit\"));\n\n    if (user.username, user.email) {\n      /*#__PURE__*/\n      _jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this);\n    }\n\n    fetch(`http://127.0.0.1:9393/users/by_name/${user}`).then(resp => resp.json()).then(user => setUser(user));\n  }; // console.log(user)\n\n\n  const handleExistingUserChange = e => {\n    setUser(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Below you can either find todo lists for an existing username,\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"or you can create a new username to begin making a new todo list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"NewUserSubmit\",\n      onSubmit: handleSubmitNewUser,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Create New Username: \\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 52\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email: \\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"user_id\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 54\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create New Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"ExistingUserSearch\",\n      onSubmit: handleSubmitExisting,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username: \\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleExistingUserChange,\n        name: \"username\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 91\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Find Todo lists for this user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserProfile, \"GMv9GZpWCsvuIMo1PxNgEjJQBgg=\");\n\n_c = UserProfile;\nexport default UserProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"sources":["/home/sheridan95/phase-3/final-react-app/src/components/UserProfile.js"],"names":["useState","TodoList","UserProfile","newUser","setNewUser","user","setUser","handleSubmitNewUser","e","preventDefault","console","log","fetch","then","resp","json","handleSubmitExisting","username","email","handleExistingUserChange","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\n// import TodoContainer from \"../containers/TodoContainer\";\nimport TodoList from \"./TodoList\";\n\nconst UserProfile = () => {\n  const [newUser, setNewUser] = useState(null);\n  const [user, setUser] = useState(null);\n\n  //   useEffect = (() => {\n  //    const render = render ? <TodoList/> : (null)\n  //     console.log(\"working on it\");\n  // }, []);\n\n  // }\n  // above should be a ternary expression\n  // to say if the user exists show their todo lists\n  // otherwise prompt them to create a new username\n\n  \n  const handleSubmitNewUser = (e) => {\n    e.preventDefault(console.log(\"handling new submit\"))\n    \n    fetch(`http://127.0.0.1:9393/users`)\n    .then(resp => resp.json())\n    .then(newUser => setNewUser(newUser))\n  }\n  console.log(newUser)\n  \n  const handleSubmitExisting = (e) => {\n    e.preventDefault(console.log(\"handling this submit\"))\n    if (user.username, user.email){\n      <TodoList />\n    }\n  \n    fetch(`http://127.0.0.1:9393/users/by_name/${user}`)\n    .then(resp => resp.json())\n    .then(user => setUser(user))\n  }\n  // console.log(user)\n\n  const handleExistingUserChange = (e) => {\n    setUser(e.target.value)\n  }\n\n  return (\n\n    <div>\n\n      <h4>User Profile</h4>\n      <p>Below you can either find todo lists for an existing username,</p>\n      <p>or you can create a new username to begin making a new todo list</p>\n\n      <form id=\"NewUserSubmit\" onSubmit={handleSubmitNewUser}>\n        <label htmlFor=\"username\">Create New Username: &nbsp;</label>\n        <input type=\"text\" name=\"email\" required /><br />\n        <label htmlFor=\"email\">Email: &nbsp;</label>\n        <input type=\"text\" name=\"user_id\" required /><br />\n        <input type=\"submit\" value=\"Create New Username\" />\n      </form>\n\n      &nbsp;\n      &nbsp;\n      &nbsp;\n      &nbsp;\n\n      <form id=\"ExistingUserSearch\" onSubmit={handleSubmitExisting}>\n        <label htmlFor=\"username\">Username: &nbsp;</label>\n        <input type=\"text\" onChange={handleExistingUserChange} name=\"username\" required /><br />\n        <input type=\"submit\" value=\"Find Todo lists for this user\" />\n      </form>\n\n      &nbsp;\n      &nbsp;\n      &nbsp;\n      &nbsp;\n      &nbsp;\n      {/* <TodoList /> */}\n      {/* linking TodoList so that when we had the profile open it would populate the todo list for a specific username.\n      Whereas existing todo lists is for all users\n      the only problem with not having the refresh button is now the todo list for everyone is auto populating on the page */}\n    </div>\n  )\n}\n\nexport default UserProfile"]},"metadata":{},"sourceType":"module"}