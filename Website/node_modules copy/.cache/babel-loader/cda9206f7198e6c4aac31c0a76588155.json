{"ast":null,"code":"var _jsxFileName = \"/home/sheridan95/phase-3/final-react-app/src/components/TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = () => {\n  _s();\n\n  const [todo, setTodo] = useState({\n    username: \"\",\n    name: \"\",\n    task: \"\",\n    completed: false\n  });\n  const history = useHistory();\n\n  const handleChange = e => {\n    setTodo({ ...todo,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if ([todo.username, todo.name, todo.task].some(val => val.trim() === \"\")) {\n      alert(\"You must fill in all the information please!\");\n    }\n\n    console.log(\"Fetching users\");\n    fetch(`http://127.0.0.1:9393/users`).then(resp => resp.json()).then(users => {\n      for (const [key, user] of Object.entries(users)) {\n        console.log(`Comparing ${user.username} to ${todo.username}`);\n\n        if (user.username === todo.username) {\n          console.log(\"MATCH!!\");\n          return user;\n        }\n      }\n\n      throw \"ERROR\";\n    }).then(newTodoUser => {\n      console.log(\"Creating new task\");\n      const newTodo = {\n        username: newTodoUser,\n        name: todo.name,\n        task: todo.task,\n        completed: todo.false\n      };\n      fetch(`http://127.0.0.1:9393/todos/new`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newTodo)\n      }).then(() => history.push(\"/todos/new\"));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create a new Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"User Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        name: \"username\",\n        value: todo.username,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 108\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Type(\\\"chore\\\", \\\"task\\\", etc.)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        name: \"name\",\n        value: todo.name,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 100\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"task\",\n        children: \"Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        name: \"task\",\n        value: todo.task,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 100\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"completed\",\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), \"\\xA0 \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"checkbox\",\n        name: \"completed?\",\n        value: todo.completed,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 115\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoForm, \"0izA5rTSu4AQI9NW0xl6ipxr8G8=\", false, function () {\n  return [useHistory];\n});\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/home/sheridan95/phase-3/final-react-app/src/components/TodoForm.js"],"names":["useState","useHistory","TodoForm","todo","setTodo","username","name","task","completed","history","handleChange","e","target","value","handleSubmit","preventDefault","some","val","trim","alert","console","log","fetch","then","resp","json","users","key","user","Object","entries","newTodoUser","newTodo","false","method","headers","body","JSON","stringify","push"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC;AAC7BK,IAAAA,QAAQ,EAAE,EADmB;AAE7BC,IAAAA,IAAI,EAAE,EAFuB;AAG7BC,IAAAA,IAAI,EAAE,EAHuB;AAI7BC,IAAAA,SAAS,EAAE;AAJkB,GAAD,CAAhC;AAOA,QAAMC,OAAO,GAAGR,UAAU,EAA1B;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AACxBP,IAAAA,OAAO,CAAC,EACJ,GAAGD,IADC;AAEJ,OAACQ,CAAC,CAACC,MAAF,CAASN,IAAV,GAAiBK,CAAC,CAACC,MAAF,CAASC;AAFtB,KAAD,CAAP;AAIH,GALD;;AAMA,QAAMC,YAAY,GAAGH,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAI,CAACZ,IAAI,CAACE,QAAN,EAAgBF,IAAI,CAACG,IAArB,EAA2BH,IAAI,CAACI,IAAhC,EAAsCS,IAAtC,CAA2CC,GAAG,IAAIA,GAAG,CAACC,IAAJ,OAAe,EAAjE,CAAJ,EAA0E;AACtEC,MAAAA,KAAK,CAAC,8CAAD,CAAL;AACH;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAC,IAAAA,KAAK,CAAE,6BAAF,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,KAAK,IAAI;AACX,WAAI,MAAM,CAACC,GAAD,EAAMC,IAAN,CAAV,IAAyBC,MAAM,CAACC,OAAP,CAAeJ,KAAf,CAAzB,EAA+C;AAC3CN,QAAAA,OAAO,CAACC,GAAR,CAAa,aAAYO,IAAI,CAACvB,QAAS,OAAMF,IAAI,CAACE,QAAS,EAA3D;;AACA,YAAGuB,IAAI,CAACvB,QAAL,KAAkBF,IAAI,CAACE,QAA1B,EAAmC;AAC/Be,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,iBAAOO,IAAP;AACH;AACJ;;AACD,YAAM,OAAN;AACH,KAXD,EAWGL,IAXH,CAWQQ,WAAW,IAAI;AAEnBX,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,YAAMW,OAAO,GAAG;AACZ3B,QAAAA,QAAQ,EAAE0B,WADE;AAEZzB,QAAAA,IAAI,EAAEH,IAAI,CAACG,IAFC;AAGZC,QAAAA,IAAI,EAAEJ,IAAI,CAACI,IAHC;AAIZC,QAAAA,SAAS,EAAEL,IAAI,CAAC8B;AAJJ,OAAhB;AAOAX,MAAAA,KAAK,CAAE,iCAAF,EAAoC;AACrCY,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX,SAF4B;AAKrCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,OAAf;AAL+B,OAApC,CAAL,CAOCT,IAPD,CAOM,MAAMd,OAAO,CAAC8B,IAAR,CAAa,YAAb,CAPZ;AAQH,KA7BD;AA8BH,GArCD;;AAuCA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEzB,YAAhB;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,4BAII;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,4BAYI;AAAO,QAAA,QAAQ,EAAEJ,YAAjB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,IAAI,EAAC,UAAhD;AAA2D,QAAA,KAAK,EAAEP,IAAI,CAACE,QAAvE;AAAiF,QAAA,QAAQ;AAAzF;AAAA;AAAA;AAAA;AAAA,cAZJ,eAY+F;AAAA;AAAA;AAAA;AAAA,cAZ/F,eAcI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAeI;AAAO,QAAA,QAAQ,EAAEK,YAAjB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,IAAI,EAAC,MAAhD;AAAuD,QAAA,KAAK,EAAEP,IAAI,CAACG,IAAnE;AAAyE,QAAA,QAAQ;AAAjF;AAAA;AAAA;AAAA;AAAA,cAfJ,eAeuF;AAAA;AAAA;AAAA;AAAA,cAfvF,eAiBI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAO,QAAA,QAAQ,EAAEI,YAAjB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,IAAI,EAAC,MAAhD;AAAuD,QAAA,KAAK,EAAEP,IAAI,CAACI,IAAnE;AAAyE,QAAA,QAAQ;AAAjF;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAkBuF;AAAA;AAAA;AAAA;AAAA,cAlBvF,4BAqBI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ,4BAwBI;AAAO,QAAA,QAAQ,EAAEG,YAAjB;AAA+B,QAAA,IAAI,EAAC,UAApC;AAA+C,QAAA,IAAI,EAAC,YAApD;AAAiE,QAAA,KAAK,EAAEP,IAAI,CAACK,SAA7E;AAAwF,QAAA,QAAQ;AAAhG;AAAA;AAAA;AAAA;AAAA,cAxBJ,eAwBsG;AAAA;AAAA;AAAA;AAAA,cAxBtG,eAyBI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA+BH,CAtFD;;GAAMN,Q;UAQcD,U;;;KARdC,Q;AAuFN,eAAeA,QAAf","sourcesContent":["import {useState} from \"react\"\nimport {useHistory} from \"react-router-dom\"\n\n\nconst TodoForm = () => {\n    const [todo, setTodo] = useState({\n        username: \"\",\n        name: \"\",\n        task: \"\",\n        completed: false\n    });\n\n    const history = useHistory()\n    \n    const handleChange = (e) => {\n        setTodo({\n            ...todo,\n            [e.target.name]: e.target.value\n        })\n    }\n    const handleSubmit = e => {\n        e.preventDefault()\n        if ([todo.username, todo.name, todo.task].some(val => val.trim() === \"\")) {\n            alert(\"You must fill in all the information please!\")\n        }\n        \n        console.log(\"Fetching users\");\n        fetch(`http://127.0.0.1:9393/users`)\n        .then(resp => resp.json())\n        .then(users => {\n            for(const [key, user] of Object.entries(users)){\n                console.log(`Comparing ${user.username} to ${todo.username}`)\n                if(user.username === todo.username){\n                    console.log(\"MATCH!!\");\n                    return user;\n                }\n            }\n            throw \"ERROR\";\n        }).then(newTodoUser => {\n\n            console.log(\"Creating new task\");\n            const newTodo = {\n                username: newTodoUser,\n                name: todo.name,\n                task: todo.task,\n                completed: todo.false            \n            }\n            \n            fetch(`http://127.0.0.1:9393/todos/new`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(newTodo)\n            })\n            .then(() => history.push(\"/todos/new\"))\n        })\n    }\n   \n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n            <h3>Create a new Todo List</h3>\n            &nbsp;\n            &nbsp;\n                <label htmlFor=\"username\">User Name</label>\n            {/* <select name=\"selectList\" id=\"selectList\">\n                {test.map((element) => {\n                    return <option value={element}>{element.username}</option>\n                })}\n            </select> */}\n            &nbsp;\n            &nbsp;\n                <input onChange={handleChange} type=\"text\" name=\"username\" value={todo.username} required/><br />\n               \n                <label htmlFor=\"name\">Type(\"chore\", \"task\", etc.)</label>\n                <input onChange={handleChange} type=\"text\" name=\"name\" value={todo.name} required/><br />\n               \n                <label htmlFor=\"task\">Task</label>\n                <input onChange={handleChange} type=\"text\" name=\"task\" value={todo.task} required/><br />\n                &nbsp;\n                &nbsp;\n                <label htmlFor=\"completed\">Completed</label>\n                &nbsp;\n                &nbsp;\n                <input onChange={handleChange} type=\"checkbox\" name=\"completed?\" value={todo.completed} required/><br />\n                <input type=\"submit\" value=\"Create Todo List\" />\n            </form>\n        </>\n    )\n}\nexport default TodoForm"]},"metadata":{},"sourceType":"module"}